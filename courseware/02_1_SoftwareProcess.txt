我们在前面讲过
过程是软件工程的一个基本要素
在这一讲中
我们将讲解什么是过程
过程在软件开发管理中
起到什么作用
软件过程又包括哪些基本活动
我们先看一下过程的含义
过程是一个广义的概念
它是通过一系列相互关联的活动
将输入转化为输出
对于软件开发来说
用户需求是软件开发的基础
也是整个开发过程的一个输入
开发人员
通过一系列软件开发活动
最终交付出用户需要的产品
现在考虑一个问题
如何才能保证最终交付的
是用户满意的产品
也许有的同学会说
我们可以对最终产品
进行质量检验
这个工作肯定是必要的
但是事后的检验
只能验证输出产品的质量
而无法保证
产品一定就是符合用户要求的
这一点需要在软件的构建过程中
加以控制和管理
显然  产品质量保证的关键
在于对软件开发过程
进行有效控制
要实现
对软件开发过程的有效控制
首先要规定过程实现的方法
和步骤
也就是说
要把整个过程进行细分
详细地定义出
过程里面的每一个环节
以及各个环节之间的执行顺序
其次
还要对过程进行监控
但是这个监控
并不只是对最终产品
进行质量检验
而是要对过程的开始
每一个活动的执行
一直到结束
进行全方位地监测
从而保证每一个活动能够
达到应有的质量
过程管理对产品质量的控制
起到至关重要的作用
我们用麦当劳食品这个例子
来说明一下过程管理的重要性
我们发现
无论在世界的什么地方
进入麦当劳餐厅
除了少量本地特色食品之外
几乎所有餐品的质量
都没有太大的差别
这是如何做到的呢
麦当劳对汉堡包的原材料
和制作过程
都做了非常细致的要求
诸如面包的大小
牛肉的品质
肉饼的组成
以及汉堡的烘烤时间等
同时  对制作后的售卖过程
也做了严格的时间限定
甚至规定了
与汉堡包一起卖的
可口可乐的温度
和柜台高度等
正是由于
在过程细节上的精益求精
从而保证了世界各地
售卖的麦当劳产品
在品质上没有太大的差异
也就是
无论何人  无论何时
无论何地无品质差异
这就是运用过程方法
来有效保证最终的产品质量
所谓过程方法
是系统地识别和管理
组织内所使用的过程
保证更有效地获得期望的结果
从刚才麦当劳的例子可以看出
过程方法是一个组织和管理
工作活动的有效手段
其目的是更好地为用户创造价值
通常过程包括实现过程
管理过程和支持过程
三种类型
其中实现过程
是提供有价值产品
或服务的关键性活动
这些活动负责把输入
转化为输出
支持活动负责提供所需要的资源
和能力
从而使关键性的实现活动
能够顺利进行
管理活动
则是衡量和评价实现过程
和支持过程的效能
建立起组织的质量管理体系
软件过程
是为了获得高质量软件
而实施的一系列活动
它包括问题定义
需求开发  软件设计
软件构造  软件测试
等一系列软件开发的实现活动
而每一项活动
都会产生相应的中间制品
为了保证软件开发过程
能够按照预定的成本  进度
质量顺利完成
还需要诸如项目管理
配置管理  质量保证
等一系列开发管理活动
通过建立
整个组织的质量管理体系
实现对软件开发
实现活动的有效控制和质量保证
下面我们来介绍一下
软件开发过程的一些基本活动
任何一个软件产品
都起源于一个实际问题
或者一个创意
当问题或创意提出之后
我们通过开展技术探索
和市场调查等活动
来研究系统的可行性
和可能的解决方案
从而确定待开发系统的总体目标和范围
下面我们用前面提到过的一个
微信抢票应用的例子
来说明问题定义这个活动
过去学生参加学校举办的活动
或演出
总是需要排队买票或领票
这个过程是非常烦人的一个过程
解决这个问题
有不同的解决方案
可以开发一个Web应用
也可以开发一个独立的手机APP
还可以做一个微信应用
通过比较
这不同方案
我们可以看出微信应用
是一个成本最低
开发最快的一个解决方案
而且学生几乎每个人都使用微信
那么微信应用
可以更容易地被学生接受
和认可
因此我们最终确定
系统的目标是
开发一个微信抢票应用
有了微信抢票应用
再参加学校的活动和演出
就是一个非常愉悦的过程
在可行性研究之后
我们还需要进行需求的开发
和定义
首先要收集用户的需求
对所收集的需求进行分析
整理和提炼
来理解和建模系统的行为
那么在这个过程
可能还要返回去
继续收集更多的需求
在对系统的行为
进行明确之后
我们还要用文档的形式
把待开发系统的行为定义出来
并且来检查和确认这个文档
是不是满足用户的要求
那么在确认的过程里
还要反复去收集  分析
再补充这样的一个过程
确认通过之后
我们形成一个
正式的软件需求规格说明书
这个需求规格说明
就是作为后续开发的一个基础
有了需求规格说明之后
我们需要对软件进行设计
然后形成软件设计说明书
那么这个设计的活动
包括以下几个方面
首先是要对软件的整体结构
进行设计
然后定义出每个模块的接口
并且进一步地设计
每一个组建的实现算法
和数据结构
同时呢
还要对整个系统的数据库
进行设计
在设计完成之后
我们还需要通过构造活动
把设计转化成程序代码
首先我们要理解系统的模型
编写代码
进行代码的审查和单元的测试
还要进行代码优化
最终要构建系统
并且集成联调
这一个过程
是一个复杂而迭代的过程
在软件构造完成之后
我们还要软件产品进行测试
测试是有不同层次的
包括单元测试  子系统测试
系统的集成测试和验收测试
在不同的层次上
来保证每一个模块
整个系统和最终产品的质量
测试通过以后
产品就可以发布了
但是系统投入使用
还会进行不断地修改
来适应不断变化的需求
应该说完全从头开发的系统
是很少的
整个开发和维护
是一个连续交叉的过程
首先呢
当新的需求出现之后
我们要定义这个需求
然后看现有的系统
是不是能够满足
当前这个新的需求
如果现有的系统
不能满足需求
我们就要进行进一步地开发
提出系统的变更
针对这个系统的变更
我们要修改现有的系统
然后形成一个新的系统
整个的这个过程
是一个循环往复的一个过程
除了基本的实现活动以外
软件项目管理
和软件配置管理
是两个很重要的开发管理活动
软件项目管理
是为了软件项目
能够按照预定的成本  进度
和质量顺利地完成
对人员  进度
质量  成本  风险
进行控制和管理的活动
应该说项目管理
主要体现在四个方面
首先要明确项目的目标
制定项目的计划
明确项目需要的资源
其次呢  要组建开发团队
要明确每一个成员的分工
和责任
然后在项目这个实施过程中
我们还要检查和评价
项目的总体进展情况
来控制整个项目范围的变更
监控项目进展过程中
出现的问题
并及时地纠正这些问题
软件配置管理
是通过版本的控制  变更的控制
并且使用合适的配置管理软件
来保证整个开发里面的
所有产品配置项
例如代码  文档等的完整性
和可跟踪性
它主要包括四个基本活动
版本管理是跟踪系统中
每一个组件的多个版本
来保证开发者
对组件的修改不会产生混乱
系统的构建
则是把不同的组件
进行编译  链接
组成了一个可执行的系统
变更管理是对开发过程中
来自用户和开发者的开发请求
进行分析和评估
做出适当的这个决策
来决定是否变更
和何时变更
当整个开发完成之后
发布版本管理
需要准备发布的软件
并对用户使用的软件
进行持续地跟踪